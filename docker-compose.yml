version: '3.8'

services:
  mosquitto:
    build: ./mosquitto
    ports:
      - "1883:1883"
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/aclfile.acl:/mosquitto/config/aclfile.acl
      - ./mosquitto/passwords:/mosquitto/config/passwords
      - ./mosquitto/init_users.sh:/mosquitto/init_users.sh
    command: sh -c "/mosquitto/init_users.sh && mosquitto -c /mosquitto/config/mosquitto.conf"
    healthcheck:
      test: ["CMD-SHELL", "timeout 3 bash -c '</dev/tcp/localhost/1883' || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    networks:
      - colmena_network

  influxdb:
    image: influxdb:2.0
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=password
      - DOCKER_INFLUXDB_INIT_ORG=apiary
      - DOCKER_INFLUXDB_INIT_BUCKET=telemetry
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUX_INIT_TOKEN}
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - colmena_network

  telegraf:
    build: ./telegraf
    environment:
      - INFLUX_INIT_TOKEN=${INFLUX_INIT_TOKEN}
    depends_on:
      - influxdb
      - mosquitto
    networks:
      - colmena_network

  grafana:
    build: ./grafana
    entrypoint: ./grafana/entrypoint.sh
    environment:
      - INFLUX_INIT_TOKEN=${INFLUX_INIT_TOKEN}
    ports:
      - "3000:3000"
    depends_on:
      - influxdb
    networks:
      - colmena_network

  nodered:
    image: nodered/node-red
    ports:
      - "1880:1880"
    volumes:
      - nodered_data:/data
      - ./nodered/flows.json:/data/flows.json
    networks:
      - colmena_network

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites:/etc/nginx/sites-enabled:ro
    depends_on:
      - api
      - grafana
    restart: unless-stopped
    networks:
      - colmena_network

  api:
    build: ./api
    ports:
      - "5000:8080"
    depends_on:
      - mosquitto
      - influxdb
      - device-registry
      - redis
    networks:
      - colmena_network

  device-registry:
    image: postgres:13
    environment:
      - POSTGRES_DB=device_registry
      - POSTGRES_USER=colmena
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./device-registry/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - colmena_network

  ml-service:
    build: ./ml-service
    depends_on:
      - influxdb
      - redis
    networks:
      - colmena_network

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    networks:
      - colmena_network

  beecount:
    build: ./beecount
    depends_on:
      - mosquitto
      - redis
    networks:
      - colmena_network

  fail2ban:
    build: ./fail2ban
    volumes:
      - /var/log:/var/log:ro
    networks:
      - colmena_network

networks:
  colmena_network:
    driver: bridge

volumes:
  influxdb_data:
  postgres_data:
  redis_data:
  nodered_data: